/*

< 2-3 트리 > 
		   하나의 노드에 최대 2개의 데이터를 가지며 차일드는 최대 3개 가지는 구조의 트리이다. 
		   AVL의 단점인 삽입,삭제 시 Rotation에 걸리는 오버헤드를 해결하기 위해 고안되어
		   평균 시간 복잡도가 O(log3 N)으로 전체 트리 알고리즘의 성능을 향상시킨 트리이다. 
		   그러나 분할에도 성능이 저하될 가능성이 있으므로 이를 개선하기 위해 2-3-4트리를 사용하기도 한다. 


장점 : 빠른 탐색시간을 보장하며 AVL의 단점을 보완한다. 
단점 : 데이터의 갯수가 2개가 넘어가면 분할 작업을 통해 자식노드를 생성하는데 이때 분할 작업 때문에 성능이 저하 될 수 있다. 


< Red-Black 트리 >


			각각의 노드가 레드 나 블랙 색상 속성을 가지고 있는 이진 탐색 트리이다. 
			이때 다음의 5가지 조건을 만족해야한다. 

			1. 노드는 블랙 또는 레드 색상 속성을 가진다.
			2. 루트는 블랙이여야한다. 
			3. 리프 노드는 블랙이여야한다. 
			4. 레드 노드의 차일드는 블랙이여야한다. 블랙 노드는 레드, 블랙 둘 다 올 수 있다 .
			5. 각각의 리프 노드까지 이르는 경로의 블랙 노드의 수가 동일해야한다.

장점: AVL트리보다 rotation이 일어나는 횟수를 줄임으로써 삽입,삭제 시의 오버헤드를 줄여 O(log n)의 시간을 보장한다. 기존의 탐색 시간은 O(log n)으로 유지된다.
	  따라서 실시간 데이터를 다루는 자료구조로 적합하다. 함수형 프로그래밍에도 많이 쓰여 연관 배열, 집합 같은 구조에 많이 사용된다. 

단점: 레드, 블랙의 색을 맞추기 위한 Rotation 오버헤드가 존재한다. ( AVL보다는 적다. 가장 이상적인 탐색, 삭제, 삽입 트리 인 듯)



*/